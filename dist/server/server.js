"use strict";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var server_exports={};__export(server_exports,{getPlayerAssignedFish:()=>getPlayerAssignedFish,onResourceStart:()=>onResourceStart,processCatchFishEvent:()=>processCatchFishEvent,processRequestStartFishing:()=>processRequestStartFishing,processUseBaitEvent:()=>processUseBaitEvent});module.exports=__toCommonJS(server_exports);var DEFAULT_LANG="pt-br";var MAXIMUM_LINE_TENSION=100;var LINE_TENSION_INCREASE_RATE=5;var TENSION_RECOVER_RATE=1;var PULL_DISTANCE_RATE_PER_TICK=10;var ROD_CAST_CHALLENGE_VELOCITY=1;var ROD_CAST_CHALLENGE_INTERVAL=1;var ROD_CAST_CHALLENGE_ACCELERATION=1e-4;var BAIT_HOLD_CHALLENGE_TIME=500;var fishingLimits={maximumLineTension:Number(MAXIMUM_LINE_TENSION)||100,lineTensionIncreaseRate:Number(LINE_TENSION_INCREASE_RATE)||5,tensionRecoverRate:Number(TENSION_RECOVER_RATE)||5,pullDistanceRatePerTick:Number(PULL_DISTANCE_RATE_PER_TICK)||10,rodCastChallengeVelocity:Number(ROD_CAST_CHALLENGE_VELOCITY)||1,rodCastChallengeInterval:Number(ROD_CAST_CHALLENGE_INTERVAL)||1,rodCastChallengeAcceleration:Number(ROD_CAST_CHALLENGE_ACCELERATION)||1e-4,baitHoldChallengeTime:Number(BAIT_HOLD_CHALLENGE_TIME)||500};var fishes={fish:{itemName:"fish",type:"common",hash:802685111},dolphin:{itemName:"dolphin",type:"uncommon",hash:-1950698411},hammerShark:{itemName:"hammershark",type:"uncommon",hash:1015224100},tigerShark:{itemName:"tigershark",type:"rare",hash:113504370},killerWhale:{itemName:"killerwhale",type:"epic",hash:-1920284487},humpBack:{itemName:"humpback",type:"legendary",hash:1193010354},stingray:{itemName:"stingray",type:"rare",hash:"a_c_stingray"}};var LocaleDefaults={fishing_spot_error:{label:"Você não está em um ponto de pesca.",variables:{}},has_bait_error:{label:"Você não tem uma isca de pesca.",variables:{}},has_rod_error:{label:"Você não tem uma vara de pesca.",variables:{}},near_spot_error:{label:"Você não está perto de um ponto de pesca.",variables:{}},in_vehicle_error:{label:"Você não pode pescar dentro de um veículo.",variables:{}},already_fishing_error:{label:"Você já está pescando.",variables:{}},fishing_state:{label:"Você agora está pescando...",variables:{}},fish_command_description:{label:"Inicia a pescaria caso esteja próximo a um ponto de pesca.",variables:{}},fish_command:{label:"pescar",variables:{}},pull_too_hard:{label:"A linha estourou! puxe mais devagar na próxima vez.",variables:{}},rod_cast_took_too_long:{label:"Você demorou muito para lançar a linha",variables:{}},fishing_spot_not_found:{label:"Local de pesca não encontrado",variables:{}},fish_ran_away:{label:"O peixe escapou!",variables:{}},fish_pull_hint:{label:"Pressione [E] para puxar o peixe! cuidado para não quebrar a linha!",variables:{}},fish_bite_bait:{label:"O peixe mordeu a isca, pressione [E] para puxá-lo!",variables:{}},fish_pull_too_soon:{label:"Você puxou a linha cedo demais! o peixe acabou fugindo",variables:{}},initialise_script:{label:"brz-fishing por brz.gg iniciado!",variables:{}},initialise_error:{label:"Um erro ocorreu ao iniciar a pesca.",variables:{}},no_fish_assigned:{label:"Não há peixe atribuído ao player id %PLAYER_ID%",variables:{PLAYER_ID:"PLAYER_ID"}},catching_success:{label:"Você pescou um %ITEM_LABEL%!",variables:{ITEM_LABEL:"ITEM_LABEL"}},unknown_error:{label:"Um erro ocorreu ao iniciar a pesca.",variables:{}}};var t=(phase,vars)=>{const locale=locales[DEFAULT_LANG];let phrase=locale[phase];if(!vars)return phrase;for(const varName of Object.keys(vars)){phrase=phrase.replace(`%${varName}%`,vars[varName])}return phrase};var locales={"pt-br":Object.values(LocaleDefaults).reduce((acc,curr,index)=>{if(typeof curr==="string"){acc[Object.keys(LocaleDefaults)[index]]=curr}else{acc[Object.keys(LocaleDefaults)[index]]=curr.label}return acc},{})};var emitNetTyped=(eventName,playerid,...data)=>{emitNet(eventName,playerid,...data)};var onNetTyped=(eventName,func)=>{onNet(eventName,func)};var _a,_b,_c;var adapters={qbCore:{isEnabled:!!((_c=(_b=(_a=exports["qb-core"])==null?void 0:_a.GetCoreObject())==null?void 0:_b.Functions)==null?void 0:_c.RemoveItem),removeItem:(source,itemName)=>{const player=qbCoreGetPlayer(source);if(!player){console.error("Player not found ",source,itemName);return false}player.Functions.RemoveItem(itemName,1);return true},addItem:(source,itemName)=>{const player=qbCoreGetPlayer(source);if(!player){console.error("Player not found ",source,itemName);return false}player.Functions.AddItem(itemName,1);return true},getItem:itemName=>{var _a3,_b3,_c3,_d;const item=(_d=(_c3=(_b3=(_a3=exports["qb-core"])==null?void 0:_a3.GetCoreObject())==null?void 0:_b3.Shared)==null?void 0:_c3.Items)==null?void 0:_d[itemName];return item},notify:(source,message,type)=>{const player=qbCoreGetPlayer(source);if(!player){console.error("Player not found");return false}TriggerClientEvent("QBCore:Notify",player.PlayerData.source,message,type);return true}}};var _a2,_b2,_c2;var qbCoreGetPlayer=(_c2=(_b2=(_a2=exports["qb-core"])==null?void 0:_a2.GetCoreObject())==null?void 0:_b2.Functions)==null?void 0:_c2.GetPlayer;var addItem=(source,itemName)=>getAdapter().addItem(source,itemName);var removeItem=(source,itemName)=>getAdapter().removeItem(source,itemName);var getItem=itemName=>getAdapter().getItem(itemName);var notify=(source,message,type)=>getAdapter().notify(source,message,type);var getAdapter=()=>{const enabledAdapterName=Object.keys(adapters).find(adapterName=>adapters[adapterName].isEnabled);if(!enabledAdapterName)throw new Error("No enabled adapter found");return adapters[enabledAdapterName]};var playerAssignedFishes={};var getPlayerAssignedFish=playerId=>playerAssignedFishes[playerId];var processCatchFishEvent=playerId=>{const assignedFishId=playerAssignedFishes[playerId];if(!assignedFishId){notify(playerId,t("no_fish_assigned",{PLAYER_ID:playerId.toString()}),"error");return}const fish=fishes[assignedFishId];const itemInfo=getItem(fish.itemName);addItem(playerId,fish.itemName);notify(playerId,t("catching_success",{ITEM_LABEL:itemInfo.label}),"success")};var processUseBaitEvent=playerId=>{if(!removeItem(playerId,"commonbait")){notify(playerId,t("has_bait_error"),"error")}};var processRequestStartFishing=playerId=>{const randomNumber=Math.round(Math.random()*(Object.values(fishes).length-1));const randomFish=Object.keys(fishes)[randomNumber];playerAssignedFishes[playerId]=randomFish;emitNetTyped("brz-fishing:startFishing",playerId,randomFish)};var onResourceStart=resName=>{if(resName===GetCurrentResourceName()){console.log(t("initialise_script"))}};on("onResourceStart",onResourceStart);onNetTyped("brz-fishing:requestStartFishing",processRequestStartFishing);onNetTyped("brz-fishing:useBait",processUseBaitEvent);onNetTyped("brz-fishing:catchFish",processCatchFishEvent);0&&(module.exports={getPlayerAssignedFish,onResourceStart,processCatchFishEvent,processRequestStartFishing,processUseBaitEvent});
